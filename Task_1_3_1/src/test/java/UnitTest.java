import org.example.SubstringFinder;

import java.io.*;
import java.util.List;

public class UnitTest {
    // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    private static void generateLargeFile(String fileName, String content, long repeatCount) throws IOException {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            for (long i = 0; i < repeatCount; i++) {
                writer.write(content);
            }
        }
    }

    // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª–µ —Å ASCII —Å–∏–º–≤–æ–ª–∞–º–∏
    public static void testASCII() throws IOException {
        String testFile = "test_file_ascii.txt";
        String searchSubstring = "abc";
        long repeatCount = 1_000_000L; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        System.out.println("File generation...");
        generateLargeFile(testFile, "xyzabcxyz" + searchSubstring + "xyz", repeatCount);

        // –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
        System.out.println("Substring Search...");
        List<Integer> positions = SubstringFinder.find(testFile, searchSubstring);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        System.out.println("The first 10 positions: " + positions.subList(0, Math.min(10, positions.size())));
    }

    // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ Unicode (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –¥–∏–∞–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–Ω–∞–∫–∞–º–∏)
    public static void testUnicode() throws IOException {
        String testFile = "test_file_unicode.txt";
        String searchSubstring = "√©";
        long repeatCount = 1_000_000L; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        System.out.println("File generation...");
        generateLargeFile(testFile, "haystackhaystack" + searchSubstring + "haystack", repeatCount);

        // –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
        System.out.println("Substring Search...");
        List<Integer> positions = SubstringFinder.find(testFile, searchSubstring);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        System.out.println("The first 10 positions: " + positions.subList(0, Math.min(10, positions.size())));
    }

    // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª–µ —Å –∫–∏—Ç–∞–π—Å–∫–∏–º–∏ –∏–µ—Ä–æ–≥–ª–∏—Ñ–∞–º–∏
    public static void testChinese() throws IOException {
        String testFile = "test_file_chinese.txt";
        String searchSubstring = "‰Ω†Â•Ω";
        long repeatCount = 1_000_000L; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        System.out.println("File generation...");
        generateLargeFile(testFile, "‰∏ñÁïå‰Ω†Â•Ω‰∏ñÁïå" + searchSubstring + "‰∏ñÁïå", repeatCount);

        // –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
        System.out.println("Substring Search...");
        List<Integer> positions = SubstringFinder.find(testFile, searchSubstring);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        System.out.println("The first 10 positions: " + positions.subList(0, Math.min(10, positions.size())));
    }

    // –¢–µ—Å—Ç: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ —Ñ–∞–π–ª–µ —Å —ç–º–æ–¥–∑–∏
    public static void testEmojis() throws IOException {
        String testFile = "test_file_emojis.txt";
        String searchSubstring = "üòä";
        long repeatCount = 1_000_000L; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π

        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        System.out.println("File generation...");
        generateLargeFile(testFile, "üôÇüòâüòäüòé" + searchSubstring + "üôÇüòâ", repeatCount);

        // –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
        System.out.println("Substring Search...");
        List<Integer> positions = SubstringFinder.find(testFile, searchSubstring);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        System.out.println("Results:");
        System.out.println("The number of found subwords: " + positions.size());
        System.out.println("The first 10 positions: " + positions.subList(0, Math.min(10, positions.size())));
    }

    public static void main(String[] args) {
        try {
            System.out.println("Running test for ASCII characters...");
            testASCII();
            System.out.println("\nRunning test for Unicode characters...");
            testUnicode();
            System.out.println("\nRunning test for Chinese characters...");
            testChinese();
            System.out.println("\nRunning test for Emojis...");
            testEmojis();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
